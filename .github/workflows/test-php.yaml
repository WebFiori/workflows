name: PHP Tests

on:
  workflow_call:
    inputs:
      php-version:
        required: true
        type: string
        description: 'PHP version to test with'
        
      phpunit-config:
        type: string
        description: 'Path to PHPUnit configuration file'
        default: tests/phpunit.xml
        
      ms-client-id:
        type: string
        description: 'Microsoft Client ID'
        required: false
        
      ms-client-secret:
        type: string
        description: 'Microsoft Client Secret'
        required: false
        
      ms-tenant-id:
        type: string
        description: 'Microsoft Tenant ID'
        required: false        
        
      inherited-secrets:
        type: string
        description: 'Comma-separated list of inherited secret names'
        required: false
jobs:
  test:
    name: Run PHPUnit Tests
    runs-on: ubuntu-latest
    
    env:
      MS_CLIENT_ID: ${{ secrets.MS_CLIENT_ID }}
      MS_CLIENT_SECRET: ${{ secrets.MS_CLIENT_SECRET }}
      MS_TENANT_ID: ${{ secrets.MS_TENANT_ID }}
      MS_RFR_TOKEN: ${{ secrets.MS_RFR_TOKEN }}
      GH_CLIENT_ID: ${{ secrets.GH_CLIENT_ID }}
      GH_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET }}
      GH_RFR_TOKEN: ${{ secrets.GH_RFR_TOKEN }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Determine PHPUnit version
        id: phpunit
        run: |
          PHP_VERSION="${{ inputs.php-version }}"
          
          if [[ "$PHP_VERSION" == "8.4" ]]; then
            echo "phpunit-version=11.5.27" >> $GITHUB_OUTPUT
          elif [[ "$PHP_VERSION" == "8.3" || "$PHP_VERSION" == "8.2" ]]; then
            echo "phpunit-version=10.5.48" >> $GITHUB_OUTPUT
          elif [[ "$PHP_VERSION" == "8.1" || "$PHP_VERSION" == "8.0" ]]; then
            echo "phpunit-version=9.5.20" >> $GITHUB_OUTPUT
          else
            echo "Unsupported PHP version: $PHP_VERSION"
            exit 1
          fi

      - name: Setup PHP ${{ github.event.inputs.php-version }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ github.event.inputs.php-version }}
          extensions: mysqli, mbstring, sqlsrv
          tools: phpunit:${{ steps.phpunit.outputs.phpunit-version }}, composer
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --prefer-source --no-interaction
      
      - name: Execute Tests
        run: phpunit --configuration=${{ inputs.phpunit-config }} --coverage-clover=clover.xml

      - name: Rename coverage report
        run: |
          mv clover.xml php-${{ inputs.php-version }}-coverage.xml

      - name: Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: php-${{ inputs.php-version }}-coverage.xml
